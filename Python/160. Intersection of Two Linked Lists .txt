# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def getIntersectionNode(self, headA, headB):
        """
        :type head1, head1: ListNode
        :rtype: ListNode
        """

        #Create a set to track which nodes we have encountered
        nodes = set()

        #Add each node in headA to the nodes set
        while headA != None:
            nodes.add(headA)
            headA = headA.next

        #Check if any node is headB was in headA and if there is,
        #return that node
        while headB != None:
            if headB in nodes:
                return headB
            headB = headB.next

        #No nodes were found in common in both lists
        return None