/**
 * Definition for a Node.
 * public class Node {
 *     public var val: Int
 *     public var children: [Node]
 *     public init(_ val: Int) {
 *         self.val = val
 *         self.children = []
 *     }
 * }
 */

class Solution {
    func postorder(_ root: Node?) -> [Int] {
    	//Recursive end case
    	if root == nil {
            return []
        }

        //Initialize the return array
        //Since this is postorder, we start the array empty
        var ret: [Int] = []

        //Append each child to the return array
        for child in root!.children {
            ret.append(contentsOf: postorder(child))
        }

        //Append the root value
        ret.append(root!.val)

        //Return the return array
        return ret
    }
}