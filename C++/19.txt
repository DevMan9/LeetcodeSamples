/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* tmp = head;
        ListNode* prev = nullptr;
        int count = 0;
        while(tmp!=nullptr){
            ListNode* next = tmp->next;
            tmp->next = prev;
            prev = tmp;
            tmp = next;
            count++;
        }
        if(count<=1){
            return nullptr;
        }
        tmp = prev;
        prev = nullptr;
        if(n==count){
            while(tmp!=nullptr){
                ListNode* next = tmp->next;
                tmp->next = prev;
                prev = tmp;
                tmp = next;
            }
            head = head->next;
        }else if(n==1){
            tmp = tmp->next;
            while(tmp!=nullptr){
                ListNode* next = tmp->next;
                tmp->next = prev;
                prev = tmp;
                tmp = next;
            }
        }else{
            int index = 1;
                while(tmp!=nullptr){
                    ListNode* next = tmp->next;
                    tmp->next = prev;
                    if(index!=n){
                        prev = tmp;
                    }
                    tmp = next;
                index++;
            }
        }
        return head;
    }
};