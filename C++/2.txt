/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode
        *tmp1 = l1,
        *tmp2 = l2,
        *e = new ListNode(0);
        e->next = e;
        int carry = 0;
        while(tmp1!=nullptr){
            tmp1->val = tmp1->val+tmp2->val+carry;
            carry = (tmp1->val>=10)?1:0;
            tmp1->val=(tmp1->val>=10)?tmp1->val-10:tmp1->val;
            if(tmp1->next == nullptr&&tmp2!=e){
                tmp1->next = tmp2->next;
                tmp2 = e;
            }
            tmp1->next=(tmp1->next==nullptr&&carry==1)?new ListNode(0):tmp1->next;
            tmp1=tmp1->next;
            tmp2=tmp2->next;
            tmp2=(tmp2==nullptr)?e:tmp2;
        }
        return l1;
    }
};