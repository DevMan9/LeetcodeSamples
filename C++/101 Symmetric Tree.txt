/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isMirroredTree(TreeNode* p, TreeNode* q) {
        //If p and q are the same node
        //or both p and q nullptrs
        //then return true
        if(p==q){
            return true;
        }
        //Return true if
        return 
            //p is not a nullpointer
            p!=nullptr
            &&
            //AND q is not a nullpointer
            q!=nullptr
            &&
            //AND the values at the root of p and q are equal
            p->val==q->val 
            && 
            //AND the left sub tree of p is the same as right subtree of q
            isMirroredTree(p->left,q->right) 
            && 
            //AND the right sub tree of p is the same as left subtree of q
            isMirroredTree(p->right,q->left);
    }
    
    bool isSymmetric(TreeNode* root) {
        return isMirroredTree(root->left,root->right);
    }
};