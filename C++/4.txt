class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        std::vector<int> vt;
    	int i = 0;
    	int j = 0;
    	double median;

	//merging lists
    	while(i<nums1.size()||j<nums2.size()){
        	if(i<nums1.size()&&j<nums2.size()){
            		if(nums1[i]<nums2[j]){
                		vt.push_back(nums1[i]);
               			i++;
            		}else{
                		vt.push_back(nums2[j]);
                		j++;
            		}
        	}else if(i<nums1.size()){
            		vt.push_back(nums1[i]);
            		i++;
        	}else{
            		vt.push_back(nums2[j]);
            		j++;
        	}
    	}
    
    	if(vt.size()%2){
		//odd
        	median = vt[vt.size()/2];
    	}else{
		//even
        	median = (vt[vt.size()/2]+vt[(vt.size()/2)-1])/2.0;
    	}
        return median;
    }
};